#include <stdio.h>
#include <stdlib.h>
#include <malloc.h>

typedef struct node {
    int data;
    struct node *next;
} node;

void add(int val, node *head) {
    node *tmp = (node *) malloc(sizeof(node));
    if(tmp == NULL) {
        printf("ERROR\n");
        return;
    }
    tmp->data = val;
    tmp->next = head->next;
    head->next = tmp;
}

void remove_from(int val, node *head) {
    while(head->next != NULL) {
        if(head->next->data == val) {
            break;
        }
        head = head->next;
    }
    node *tmp = head->next;
    head->next = tmp->next;
    free(tmp);
}

void print(node *head) {
    head = head->next;
    while(head) {
        printf("%d ", head->data);
        head = head->next;
    }
    printf("\n");
}

void clean(node *head) {
    while(head) {
        node *tmp = head->next;
        free(head);
        head = tmp;
    }
}

int main()
{
    char command;
    int val = 0;
    node *head = (node *) malloc(sizeof(node));
    if(head == NULL) {
        printf("ERROR");
        return 0;
    }
    head->data = -111222;
    head->next = NULL;

    while(1) {

        scanf("%c", &command);

        if(command == 'a') {
            scanf("%d", &val);
            add(val, head);
        }

        if(command == 'r') {
            scanf("%d", &val);
            remove_from(val, head);
        }

        if(command == 'p') {
            print(head);
        }

        if(command == 'q') {
            clean(head);
            break;
        }

    }
    return 0;
}
