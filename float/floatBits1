#include <stdio.h>
#include <stdlib.h>
union data {
    float f;
    int i;
};
struct answer{
    int s;
    int e;
    int m;
};
void floatBits1 () {
    union data fl;
    struct answer ans;
    int mask_sign = 0x00000001, mask_exponent = 0x000000FF, mask_mantiss = 0x007FFFFF;
    float f = 0;
    int f1 = 0, f2 = 0;
    scanf("%d", &f1);
    scanf("%d", &f2);
    if(f2 == 0) {
        if(f1 == 0) {
            printf("NaN\n");
            return 0;
        }
        else if(f1 > 0) {
            printf("+inf\n");
            return 0;
        }
        else if(f1 < 0) {
            printf("-inf\n");
            return 0;
        }
    }
    f = ((double)(f1) / f2);
    fl.f = f;
    struct answer ans1;
    ans1.s = (fl.i >> 31) & mask_sign;
    ans1.e = (fl.i >> 23) & mask_exponent;
    ans1.m = (fl.i & mask_mantiss);
    if(ans1.e - 127 >= 0) {
        printf("(-1)^%d * 1.%d * 2^%d", ans1.s, ans1.m, ans1.e - 127);
    }
    else {
        printf("(-1)^%d * 1.%d * 2^(%d)", ans1.s, ans1.m, ans1.e - 127);
    }
}
int main()
{
    
    return 0;
}
